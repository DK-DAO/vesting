{"version":3,"sources":["WalletConnect/WalletConnect.js","utilities/singleton.js","MainPage/TableMain.js","MainPage/TokenReleased.js","MainPage/TokenVested.js","App.js","reportWebVitals.js","index.js"],"names":["walletConnector","WalletConnect","bridge","qrcodeModal","QRCodeModal","singleton","formatNumber","v","Intl","NumberFormat","format","getProvider","provider","ethers","providers","JsonRpcProvider","rows","jsonData","map","e","amount","BigNumber","toString","TableVesting","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","fontWeight","align","TableBody","row","border","scope","fontFamily","Link","href","contract","target","beneficiary","TokenReleased","props","locked","transferable","Grid","container","spacing","item","Typography","color","fontSize","TokenVested","remain","available","withdrew","total","xs","md","variant","oneUint","oneDay","createRecord","label","value","App","state","connected","account","consumedBlocks","releaseType","startVesting","totalBlocks","unlockAmountPerBlock","from","vestingContract","token","Contract","abiErc20","loading","this","balanceOf","then","s","add","div","setState","toNumber","sub","on","error","payload","accounts","params","firstLoadOfData","vestingData","filter","vestingRecord","abiVestingContract","getVestingSchedule","event","receiver","availableBlocks","killSession","createSession","chainId","result","interface","encodeFunctionData","sendTx","data","sendTransaction","to","address","console","log","catch","currentTime","Math","floor","Date","now","vestedDay","blockSize","withdrewToken","mul","availableToken","totalToken","displayData","toLocaleString","push","abs","Container","alignItems","padding","Button","fullWidth","onClick","buttonConnectHandler","bind","disabled","buttonWithdrawMyToken","justifyItems","CircularProgress","utils","isAddress","replace","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98866ca2.chunk.js","sourcesContent":["import WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";;\n\nexport const walletConnector = new WalletConnect({\n    bridge: \"https://bridge.walletconnect.org\", // Required\n    qrcodeModal: QRCodeModal,\n});","import {ethers} from 'ethers';\nconst singleton = {};\n\nexport function formatNumber(v){\n    if(typeof singleton.formatNumber === 'undefined'){\n        singleton.formatNumber = new Intl.NumberFormat('en-US');\n    }\n    return singleton.formatNumber.format(v);\n}\n\nexport function getProvider(){\n    if(typeof singleton.provider === 'undefined'){\n        singleton.provider = new ethers.providers.JsonRpcProvider('https://bsc-dataseed.binance.org/');\n    }\n    return singleton.provider;\n}\n\n","import * as React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, Paper, TableRow } from '@mui/material';\nimport jsonData from '../json/vesting-creator.json';\nimport BigNumber from 'bignumber.js';\nimport { Link } from '@mui/material';\nimport { formatNumber } from '../utilities/singleton';\n\nconst rows = jsonData.map((e) => ({ ...e, amount: formatNumber(new BigNumber(e.amount)).toString() }));\n\nexport default function TableVesting() {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ fontWeight: 'bold' }}>Vesting Contract</TableCell>\n            <TableCell sx={{ fontWeight: 'bold' }}>Owner</TableCell>\n            <TableCell align=\"right\" sx={{ fontWeight: 'bold' }}>\n              Total Vesting\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.contract} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n              <TableCell component=\"th\" scope=\"row\" sx={{ fontFamily: 'monospace' }}>\n                <Link href={`https://bscscan.com/address/${row.contract}`} target=\"_blank\">\n                  {row.contract}\n                </Link>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" sx={{ fontFamily: 'monospace' }}>\n                <Link href={`https://bscscan.com/address/${row.beneficiary}`} target=\"_blank\">\n                  {row.beneficiary}\n                </Link>\n              </TableCell>\n              <TableCell align=\"right\" sx={{ fontFamily: 'monospace' }}>\n                {row.amount} DKT\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import * as React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { formatNumber } from '../utilities/singleton';\n\nexport default function TokenReleased(props) {\n  const { locked, transferable } = props;\n  return (\n    <Grid container spacing={6}>\n      <Grid item>\n        <Typography sx={{ color: '#110C12', fontSize: \"0.875rem\" }}>\n          Maximum\n        </Typography>\n        <Typography sx={{ color: '#110C12', fontSize: \"1.5rem\" }}>\n          10,000,000 DKT\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography sx={{ color: '#110C12', fontSize: \"0.875rem\" }}>\n          Locked\n        </Typography>\n        <Typography sx={{ color: '#110C12', fontSize: \"1.5rem\" }}>\n          {formatNumber(locked)} DKT\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography sx={{ color: '#110C12', fontSize: \"0.875rem\" }}>\n          Transferable\n        </Typography>\n        <Typography sx={{ color: '#110C12', fontSize: \"1.5rem\" }}>\n          {formatNumber(transferable)} DKT\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { formatNumber } from '../utilities/singleton';\n\nexport default function TokenVested(props) {\n  const { remain, available, withdrew, total } = props;\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={3}>\n        <Typography variant=\"h4\" align=\"center\">\n          {formatNumber(remain)} DKT\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\">\n          Remaining\n        </Typography>\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <Typography variant=\"h4\" align=\"center\" sx={{ color: 'green' }}>\n          {formatNumber(available)} DKT\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" sx={{ color: 'green' }}>\n          Available To Withdraw\n        </Typography>\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <Typography variant=\"h4\" align=\"center\" sx={{ color: 'red' }}>\n          {formatNumber(withdrew)} DKT\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" sx={{ color: 'red' }}>\n          Withdrew\n        </Typography>\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <Typography variant=\"h4\" align=\"center\">\n          {formatNumber(total)} DKT\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\">\n          Total\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport {\n  Container,\n  Grid,\n  /* MenuItem,\n  Button,\n  Select,\n  Typography,\n  TextField,\n  Card,\n  CardContent,\n  CardActions,*/\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  Paper,\n  TableRow,\n  CircularProgress,\n} from '@mui/material';\nimport { BigNumber, ethers } from 'ethers';\nimport abiErc20 from './abi/ERC20.json';\nimport abiVestingContract from './abi/VestingContract.json';\nimport { walletConnector } from './WalletConnect/WalletConnect';\nimport TableVesting from './MainPage/TableMain';\nimport TokenReleased from './MainPage/TokenReleased';\nimport { formatNumber, getProvider } from './utilities/singleton';\nimport vestingData from './json/vesting-creator.json';\nimport TokenVested from './MainPage/TokenVested';\n\nconst oneUint = '1000000000000000000';\nconst oneDay = 86400;\nconst oneMonth = 30 * oneDay;\nconst RELEASE_MONTHLY = 1;\n\nfunction createRecord(label, value) {\n  return { label, value };\n}\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      account: '',\n      contract: '',\n      consumedBlocks: 0,\n      releaseType: 0,\n      remain: 0,\n      startVesting: 0,\n      totalBlocks: 0,\n      unlockAmountPerBlock: ethers.BigNumber.from(0),\n      vestingContract: null,\n      token: new ethers.Contract('0x7Ceb519718A80Dd78a8545AD8e7f401dE4f2faA7', abiErc20, getProvider()),\n      locked: 0,\n      transferable: 0,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    token.balanceOf('0x0f119c28d2d13800A58BD6112454aB190d740193').then((v) => {\n      token.balanceOf('0x365c3F921b2915a480308D0b1C04aEF7B99c2876').then((s) => {\n        const locked = s.add(v).div(oneUint);\n        this.setState({\n          locked: locked.toNumber(),\n          transferable: BigNumber.from(10000000).sub(locked).toNumber(),\n        });\n      });\n    });\n\n    // Subscribe to connection events\n    walletConnector.on('connect', (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      // Get provided accounts and chainId\n      const { accounts } = payload.params[0];\n      this.firstLoadOfData(accounts[0]);\n      this.setState({\n        connected: true,\n        account: accounts[0],\n      });\n    });\n\n    // Subscribe to disconnect events\n    walletConnector.on('disconnect', (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      this.setState({\n        connected: false,\n        account: '',\n      });\n    });\n\n    if (walletConnector.connected) {\n      this.firstLoadOfData(walletConnector.accounts[0]);\n    }\n\n    this.setState({\n      connected: walletConnector.connected,\n      account: walletConnector.connected ? walletConnector.accounts[0] : null,\n    });\n  }\n\n  firstLoadOfData(account) {\n    const [vestingRecord] = vestingData.filter((e) => e.beneficiary === account);\n    if (typeof vestingRecord !== 'undefined') {\n      const vestingContract = new ethers.Contract(vestingRecord.contract, abiVestingContract, getProvider());\n      this.setState({ contract: vestingRecord.contract });\n      vestingContract.getVestingSchedule().then((v) => {\n        this.setState({\n          vestingContract,\n          consumedBlocks: v.consumedBlocks.toNumber(),\n          releaseType: v.releaseType.toNumber(),\n          remain: v.remain.div(oneUint).toNumber(),\n          startVesting: v.startVesting.toNumber(),\n          totalBlocks: v.totalBlocks.toNumber(),\n          unlockAmountPerBlock: v.unlockAmountPerBlock,\n          loading: false,\n        });\n      });\n    }\n  }\n\n  textReceiverHandler(event) {\n    this.setState({\n      receiver: event.target.value,\n    });\n  }\n\n  buttonConnectHandler() {\n    // Check if connection is already established\n    if (!walletConnector.connected) {\n      // create new session\n      walletConnector.createSession({ chainId: 56 });\n    } else {\n      this.setState({ availableBlocks: 0 });\n      walletConnector.killSession();\n    }\n  }\n\n  buttonWithdrawMyToken(event) {\n    const { vestingContract } = this.state;\n    const result = vestingContract.interface.encodeFunctionData('withdraw', []);\n    this.sendTx(result);\n  }\n\n  sendTx(data) {\n    walletConnector\n      .sendTransaction({\n        from: this.state.account,\n        to: this.state.vestingContract.address,\n        value: 0,\n        data,\n      })\n      .then((result) => {\n        // Returns transaction id (hash)\n        console.log(result);\n      })\n      .catch((error) => {\n        // Error returned when rejected\n        console.error(error);\n      });\n  }\n\n  render() {\n    const currentTime = Math.floor(Date.now() / 1000);\n\n    const {\n      connected,\n      account,\n      contract,\n      consumedBlocks,\n      releaseType,\n      remain,\n      startVesting,\n      unlockAmountPerBlock,\n      locked,\n      transferable,\n      totalBlocks,\n      loading,\n    } = this.state;\n    const vestedDay = Math.floor((currentTime - startVesting) / oneDay);\n    const blockSize = releaseType === RELEASE_MONTHLY ? oneMonth : oneDay;\n    let availableBlocks =\n      currentTime > startVesting ? Math.floor((currentTime - startVesting) / blockSize) - consumedBlocks : 0;\n    if (availableBlocks >= totalBlocks) {\n      availableBlocks = totalBlocks;\n    }\n    const withdrewToken = unlockAmountPerBlock.mul(consumedBlocks).div(oneUint).toNumber();\n    const availableToken = unlockAmountPerBlock.mul(availableBlocks).div(oneUint).toNumber();\n    const totalToken = unlockAmountPerBlock.mul(totalBlocks).div(oneUint).toNumber();\n    const displayData = [\n      createRecord('Connect status', connected ? 'connected' : 'disconnected'),\n      createRecord('Connected account', account),\n      createRecord('Managing vesting contract', contract),\n      createRecord('Withdrew token', `${formatNumber(withdrewToken)} DKT`),\n      createRecord('Remaining token', `${formatNumber(remain)} DKT`),\n      createRecord('Release type', releaseType === RELEASE_MONTHLY ? 'monthly' : 'linear'),\n      createRecord('Start vesting', new Date(startVesting * 1000).toLocaleString()),\n      createRecord('Vesting status', currentTime - startVesting > 0 ? 'vesting' : 'cliff'),\n    ];\n    if (vestedDay >= 0) {\n      displayData.push(createRecord('Vested duration', `${vestedDay} day${vestedDay > 1 ? 's' : ''}`));\n    } else {\n      displayData.push(\n        createRecord('Start vesting in', `${Math.abs(vestedDay)} day${Math.abs(vestedDay) > 1 ? 's' : ''}`),\n      );\n    }\n\n    return (\n      <Container>\n        <Grid container spacing={2} alignItems=\"center\" sx={{padding: \"2rem 0\"}}>\n          <Grid item xs={8}>\n            {connected ? (\n              <TokenVested withdrew={withdrewToken} available={availableToken} remain={remain} total={totalToken} />\n            ) : (\n                <Grid item xs={12}>\n                  <TokenReleased locked={locked} transferable={transferable} />\n                </Grid>\n            )}\n          </Grid>\n          <Grid item xs={4}>\n            <Grid container spacing={2}>\n              <Grid item md={6}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={this.buttonConnectHandler.bind(this)}\n                  color={connected ? 'error' : 'success'}\n                >\n                  {connected ? 'Disconnect' : 'Connect'}\n                </Button>\n              </Grid>\n              <Grid item md={6}>\n                <Button\n                  disabled={availableToken <= 0}\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={this.buttonWithdrawMyToken.bind(this)}\n                  color={'primary'}\n                >\n                  Withdraw\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        {connected ? (\n          <TableContainer component={Paper}>\n            {loading ? (\n              <Grid container spacing={2} justifyItems=\"center\" alignItems=\"center\">\n                <Grid item xs=\"auto\">\n                  <CircularProgress />\n                </Grid>\n              </Grid>\n            ) : (\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Term</TableCell>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Data</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {displayData.map((row) => (\n                    <TableRow\n                      key={row.label.replace(/\\s/g, '-')}\n                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                    >\n                      <TableCell component=\"th\" scope=\"row\" sx={{ fontFamily: 'monospace' }}>\n                        {row.label}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\" sx={{ fontFamily: 'monospace' }}>\n                        {ethers.utils.isAddress(row.value) ? (\n                          <Link href={`https://bscscan.com/address/${row.value}`} target=\"_blank\">\n                            {row.value}\n                          </Link>\n                        ) : (\n                          row.value\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n          </TableContainer>\n        ) : (\n          <TableVesting />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}